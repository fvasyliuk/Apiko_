{"ast":null,"code":"import { createSelector } from 'reselect';\n\nvar todos = function todos(state, filterTodos) {\n  var filterFunc;\n\n  switch (filterTodos) {\n    case '/':\n      filterFunc = function filterFunc(it) {\n        return it;\n      };\n\n      break;\n\n    case '/new':\n      filterFunc = function filterFunc(it) {\n        return it.completed === false;\n      };\n\n      break;\n\n    case '/completed':\n      filterFunc = function filterFunc(it) {\n        return it.completed === true;\n      };\n\n      break;\n  }\n\n  state.todos.todos.filter(filterFunc(item));\n};\n\nvar isLoading = function isLoading(state) {\n  return state.todos.isLoading;\n};\n\nexport var getTodos = createSelector(todos, function (state) {\n  return state;\n});\nexport var getLoadingStatus = createSelector(isLoading, function (state) {\n  return state;\n});","map":{"version":3,"sources":["C:\\Apiko\\home_task_8\\src\\modules\\todos\\todosSelectors.js"],"names":["createSelector","todos","state","filterTodos","filterFunc","it","completed","filter","item","isLoading","getTodos","getLoadingStatus"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,WAAR,EAAuB;AACjC,MAAIC,UAAJ;;AACA,UAAQD,WAAR;AACI,SAAK,GAAL;AACIC,MAAAA,UAAU,GAAG,oBAACC,EAAD;AAAA,eAAOA,EAAP;AAAA,OAAb;;AACA;;AACJ,SAAK,MAAL;AACID,MAAAA,UAAU,GAAG,oBAACC,EAAD;AAAA,eAAOA,EAAE,CAACC,SAAH,KAAe,KAAtB;AAAA,OAAb;;AACA;;AACJ,SAAK,YAAL;AACIF,MAAAA,UAAU,GAAG,oBAACC,EAAD;AAAA,eAAOA,EAAE,CAACC,SAAH,KAAe,IAAtB;AAAA,OAAb;;AACA;AATR;;AAWAJ,EAAAA,KAAK,CAACD,KAAN,CAAYA,KAAZ,CAAkBM,MAAlB,CAAyBH,UAAU,CAACI,IAAD,CAAnC;AACH,CAdD;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACP,KAAD;AAAA,SAAUA,KAAK,CAACD,KAAN,CAAYQ,SAAtB;AAAA,CAAlB;;AAEA,OAAO,IAAMC,QAAQ,GAAGV,cAAc,CAClCC,KADkC,EAElC,UAACC,KAAD;AAAA,SAAWA,KAAX;AAAA,CAFkC,CAA/B;AAIP,OAAO,IAAMS,gBAAgB,GAAGX,cAAc,CAC1CS,SAD0C,EAE1C,UAACP,KAAD;AAAA,SAAWA,KAAX;AAAA,CAF0C,CAAvC","sourcesContent":["import { createSelector } from 'reselect';\r\n\r\nconst todos = (state, filterTodos)=> {\r\n    let filterFunc;\r\n    switch (filterTodos) {\r\n        case '/':\r\n            filterFunc = (it)=> it;\r\n            break;\r\n        case '/new':\r\n            filterFunc = (it)=> it.completed===false;\r\n            break;\r\n        case '/completed':\r\n            filterFunc = (it)=> it.completed===true;\r\n            break;\r\n    }\r\n    state.todos.todos.filter(filterFunc(item))\r\n};\r\nconst isLoading = (state)=> state.todos.isLoading;\r\n\r\nexport const getTodos = createSelector(\r\n    todos,\r\n    (state) => state\r\n);\r\nexport const getLoadingStatus = createSelector(\r\n    isLoading,\r\n    (state) => state\r\n);"]},"metadata":{},"sourceType":"module"}