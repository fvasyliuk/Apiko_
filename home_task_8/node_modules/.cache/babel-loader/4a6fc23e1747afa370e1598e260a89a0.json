{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Apiko\\\\home_task_8\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Apiko\\\\home_task_8\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as actions from './todosActions';\nexport function addTodo(todo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _addTodoThunk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch(actions.addTodo.start());\n                _context.next = 4;\n                return setTimeout(function () {\n                  console.log('wait');\n                }, 2000);\n\n              case 4:\n                _context.next = 6;\n                return dispatch(actions.addTodo.success(todo));\n\n              case 6:\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(actions.addTodo.error());\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      function addTodoThunk(_x, _x2) {\n        return _addTodoThunk.apply(this, arguments);\n      }\n\n      return addTodoThunk;\n    }()\n  );\n}\nexport { actions };","map":{"version":3,"sources":["C:\\Apiko\\home_task_8\\src\\modules\\todos\\todosOperations.js"],"names":["actions","addTodo","todo","dispatch","getState","start","setTimeout","console","log","success","error","addTodoThunk"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,gBAAzB;AAGA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAA4BC,QAA5B,EAAsCC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAECD,gBAAAA,QAAQ,CAACH,OAAO,CAACC,OAAR,CAAgBI,KAAhB,EAAD,CAAR;AAFD;AAAA,uBAGOC,UAAU,CAAC,YAAI;AAACC,kBAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAAoB,iBAA1B,EAA2B,IAA3B,CAHjB;;AAAA;AAAA;AAAA,uBAIOL,QAAQ,CAACH,OAAO,CAACC,OAAR,CAAgBQ,OAAhB,CAAwBP,IAAxB,CAAD,CAJf;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMCC,gBAAAA,QAAQ,CAACH,OAAO,CAACC,OAAR,CAAgBS,KAAhB,EAAD,CAAR;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA,eAAsBC,YAAtB;AAAA;AAAA;;AAAA,aAAsBA,YAAtB;AAAA;AAAA;AASH;AAED,SAASX,OAAT","sourcesContent":["import * as actions from './todosActions';\r\n\r\n\r\nexport function addTodo(todo) {\r\n    return async function addTodoThunk(dispatch, getState) {\r\n        try{\r\n            dispatch(actions.addTodo.start());\r\n            await setTimeout(()=>{console.log('wait')},2000);\r\n            await dispatch(actions.addTodo.success(todo));\r\n        } catch (err) {\r\n            dispatch(actions.addTodo.error())\r\n        }\r\n    }\r\n}\r\n\r\nexport { actions };"]},"metadata":{},"sourceType":"module"}