{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apiko\\\\home_task_8\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ListItem from './components/ListItem';\nimport T from 'prop-types';\nimport uuid from 'uuid/v4';\nimport { todosOperations, todosSelectors } from './modules/todos';\nimport { Link, Route } from 'react-router-dom';\nimport { compose, withState, withHandlers } from 'recompose';\nimport { connect } from 'react-redux';\n\nfunction App(_ref) {\n  var isLoading = _ref.isLoading,\n      setInputState = _ref.setInputState,\n      list = _ref.list,\n      inputState = _ref.inputState,\n      handleOnChange = _ref.handleOnChange,\n      handleOnClick = _ref.handleOnClick,\n      handleItemOnClick = _ref.handleItemOnClick;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: function onChange(evt) {\n      return setInputState(evt.target.value);\n    },\n    value: inputState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, isLoading ? 'loading' : 'Add'), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"\\u0412\\u0441\\u0456\"), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"\\u041D\\u043E\\u0432\\u0456\"), React.createElement(Link, {\n    to: \"/completed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\u0412\\u0438\\u043A\\u043E\\u043D\\u0430\\u043D\\u0456\")), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    render: function render() {\n      return React.createElement(ListItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/new\",\n    render: function render() {\n      return React.createElement(ListItem, {\n        items: list.filter(function (item) {\n          return item.completed === false;\n        }),\n        handleItemOnClick: handleItemOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/completed\",\n    render: function render() {\n      return React.createElement(ListItem, {\n        items: list.filter(function (item) {\n          return item.completed === true;\n        }),\n        handleItemOnClick: handleItemOnClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }));\n}\n\nApp.propTypes = {\n  appState: T.shape({\n    inputValue: T.string,\n    items: T.arrayOf(T.shape({\n      text: T.string,\n      id: T.number,\n      completed: T.bool\n    }))\n  }),\n  handleOnChange: T.func,\n  handleOnClick: T.func,\n  handleItemOnClick: T.func\n};\nvar mapDispatchToProps = {\n  addTodo: todosOperations.addTodo\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: todosSelectors.getTodos(state),\n    isLoading: todosSelectors.getLoadingStatus(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withState('inputState', 'setInputState', ''), withHandlers({\n  handleOnClick: function handleOnClick(props) {\n    return function () {\n      var newTodo = {\n        text: props.inputState,\n        id: uuid(),\n        completed: false\n      };\n      props.addTodo(newTodo);\n      props.setInputState('');\n    };\n  }\n}))(App);","map":{"version":3,"sources":["C:\\Apiko\\home_task_8\\src\\App.js"],"names":["React","ListItem","T","uuid","todosOperations","todosSelectors","Link","Route","compose","withState","withHandlers","connect","App","isLoading","setInputState","list","inputState","handleOnChange","handleOnClick","handleItemOnClick","evt","target","value","filter","item","completed","propTypes","appState","shape","inputValue","string","items","arrayOf","text","id","number","bool","func","mapDispatchToProps","addTodo","mapStateToProps","state","getTodos","getLoadingStatus","props","newTodo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,iBAAhD;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,YAA7B,QAAiD,WAAjD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,SAASC,GAAT,OAQG;AAAA,MAPDC,SAOC,QAPDA,SAOC;AAAA,MANDC,aAMC,QANDA,aAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,cAGC,QAHDA,cAGC;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,iBACC,QADDA,iBACC;AACD,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,QAAQ,EAAE,kBAACC,GAAD;AAAA,aAAON,aAAa,CAACM,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAApB;AAAA,KAAjB;AAAyD,IAAA,KAAK,EAAEN,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCL,SAAS,GAAE,SAAF,GAAc,KAAxD,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAHF,CAHF,EAQE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAc,IAAA,IAAI,EAAC,GAAnB;AAAuB,IAAA,MAAM,EAAE;AAAA,aAC7B,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD6B;AAAA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,MAAM,EAAE;AAAA,aACzB,oBAAC,QAAD;AACE,QAAA,KAAK,EAAEE,IAAI,CAACQ,MAAL,CAAY,UAACC,IAAD;AAAA,iBAAQA,IAAI,CAACC,SAAL,KAAiB,KAAzB;AAAA,SAAZ,CADT;AAEE,QAAA,iBAAiB,EAAEN,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADyB;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAkBE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,MAAM,EAAE;AAAA,aAC/B,oBAAC,QAAD;AACA,QAAA,KAAK,EAAEJ,IAAI,CAACQ,MAAL,CAAY,UAACC,IAAD;AAAA,iBAAQA,IAAI,CAACC,SAAL,KAAiB,IAAzB;AAAA,SAAZ,CADP;AAEE,QAAA,iBAAiB,EAAEN,iBAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD+B;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AA2BD;;AAEDP,GAAG,CAACc,SAAJ,GAAgB;AACdC,EAAAA,QAAQ,EAAEzB,CAAC,CAAC0B,KAAF,CAAQ;AAChBC,IAAAA,UAAU,EAAE3B,CAAC,CAAC4B,MADE;AAEhBC,IAAAA,KAAK,EAAE7B,CAAC,CAAC8B,OAAF,CAAU9B,CAAC,CAAC0B,KAAF,CAAQ;AACvBK,MAAAA,IAAI,EAAE/B,CAAC,CAAC4B,MADe;AAEvBI,MAAAA,EAAE,EAAEhC,CAAC,CAACiC,MAFiB;AAGvBV,MAAAA,SAAS,EAACvB,CAAC,CAACkC;AAHW,KAAR,CAAV;AAFS,GAAR,CADI;AASdnB,EAAAA,cAAc,EAAEf,CAAC,CAACmC,IATJ;AAUdnB,EAAAA,aAAa,EAAEhB,CAAC,CAACmC,IAVH;AAWdlB,EAAAA,iBAAiB,EAAEjB,CAAC,CAACmC;AAXP,CAAhB;AAcA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAEnC,eAAe,CAACmC;AADA,CAA3B;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAW;AACjC1B,IAAAA,IAAI,EAAEV,cAAc,CAACqC,QAAf,CAAwBD,KAAxB,CAD2B;AAEjC5B,IAAAA,SAAS,EAAER,cAAc,CAACsC,gBAAf,CAAgCF,KAAhC;AAFsB,GAAX;AAAA,CAAxB;;AAKA,eAAejC,OAAO,CACpBG,OAAO,CAAC6B,eAAD,EAAkBF,kBAAlB,CADa,EAEpB7B,SAAS,CAAC,YAAD,EAAe,eAAf,EAAgC,EAAhC,CAFW,EAGpBC,YAAY,CAAC;AACXQ,EAAAA,aAAa,EAAE,uBAAC0B,KAAD;AAAA,WAAS,YAAI;AAC1B,UAAMC,OAAO,GAAG;AACdZ,QAAAA,IAAI,EAACW,KAAK,CAAC5B,UADG;AAEdkB,QAAAA,EAAE,EAAE/B,IAAI,EAFM;AAGdsB,QAAAA,SAAS,EAAE;AAHG,OAAhB;AAKAmB,MAAAA,KAAK,CAACL,OAAN,CAAcM,OAAd;AACAD,MAAAA,KAAK,CAAC9B,aAAN,CAAoB,EAApB;AACD,KARc;AAAA;AADJ,CAAD,CAHQ,CAAP,CAebF,GAfa,CAAf","sourcesContent":["import React from \"react\";\nimport ListItem from './components/ListItem';\nimport T from 'prop-types';\nimport uuid from 'uuid/v4'\nimport { todosOperations, todosSelectors } from './modules/todos';\nimport { Link, Route } from 'react-router-dom';\nimport { compose, withState, withHandlers } from 'recompose';\nimport { connect } from 'react-redux';\n\nfunction App({\n  isLoading,\n  setInputState,\n  list,\n  inputState,\n  handleOnChange,\n  handleOnClick,\n  handleItemOnClick,\n}) {\n  return (\n    <div className=\"App\">\n      <input onChange={(evt)=>setInputState(evt.target.value)} value={inputState} />\n      <button onClick={handleOnClick}>{isLoading? 'loading' : 'Add'}</button>\n      <div>\n        <Link to='/'>Всі</Link>\n        <Link to='/new'>Нові</Link>\n        <Link to='/completed'>Виконані</Link>\n      </div>\n      <Route exact  path='/' render={()=>\n        <ListItem       \n        />\n      } />\n      <Route path='/new' render={()=>\n        <ListItem \n          items={list.filter((item)=>item.completed===false)} \n          handleItemOnClick={handleItemOnClick}\n        />\n      } />\n      <Route path='/completed' render={()=>\n        <ListItem \n        items={list.filter((item)=>item.completed===true)} \n          handleItemOnClick={handleItemOnClick}\n        />\n      }/>      \n    </div>\n  );\n}\n\nApp.propTypes = {\n  appState: T.shape({\n    inputValue: T.string,\n    items: T.arrayOf(T.shape({\n      text: T.string,\n      id: T.number,\n      completed:T.bool\n    }))\n  }),\n  handleOnChange: T.func,\n  handleOnClick: T.func,\n  handleItemOnClick: T.func,\n}\n\nconst mapDispatchToProps = {\n  addTodo: todosOperations.addTodo,\n}\nconst mapStateToProps = (state)=> ({\n  list: todosSelectors.getTodos(state),\n  isLoading: todosSelectors.getLoadingStatus(state),\n})\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withState('inputState', 'setInputState', ''),\n  withHandlers({\n    handleOnClick: (props)=>()=>{\n      const newTodo = {\n        text:props.inputState,\n        id: uuid(),\n        completed: false,\n      };\n      props.addTodo(newTodo);\n      props.setInputState('');\n    },\n\n  })\n)(App);"]},"metadata":{},"sourceType":"module"}