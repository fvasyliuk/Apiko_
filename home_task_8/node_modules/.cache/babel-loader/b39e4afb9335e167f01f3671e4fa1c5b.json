{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apiko\\\\home_task_8\\\\src\\\\App.js\";\nimport React from \"react\";\nimport ListItem from './components/ListItem';\nimport T from 'prop-types';\nimport uuid from 'uuid/v4';\nimport { todosOperations, todosSelectors } from './modules/todos';\nimport { Link, Route } from 'react-router-dom';\nimport { compose, withState, withHandlers } from 'recompose';\nimport { connect } from 'react-redux';\n\nfunction App(_ref) {\n  var isLoading = _ref.isLoading,\n      setInputState = _ref.setInputState,\n      inputState = _ref.inputState,\n      handleOnClick = _ref.handleOnClick;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: function onChange(evt) {\n      return setInputState(evt.target.value);\n    },\n    value: inputState,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: handleOnClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, isLoading ? 'loading' : 'Add'), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\u0412\\u0441\\u0456\"), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\u041D\\u043E\\u0432\\u0456\"), React.createElement(Link, {\n    to: \"/completed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"\\u0412\\u0438\\u043A\\u043E\\u043D\\u0430\\u043D\\u0456\")), React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: ListItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/new\",\n    component: ListItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/completed\",\n    component: ListItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }));\n}\n\nApp.propTypes = {\n  isLoading: T.bool,\n  inputState: T.string,\n  handleOnClick: T.func,\n  setInputState: T.func\n};\nvar mapDispatchToProps = {\n  addTodo: todosOperations.addTodo\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: todosSelectors.getLoadingStatus(state)\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withState('inputState', 'setInputState', ''), withHandlers({\n  handleOnClick: function handleOnClick(props) {\n    return function () {\n      var newTodo = {\n        text: props.inputState,\n        id: uuid(),\n        completed: false\n      };\n      console;\n      props.addTodo(newTodo);\n      props.setInputState('');\n    };\n  }\n}))(App);","map":{"version":3,"sources":["C:\\Apiko\\home_task_8\\src\\App.js"],"names":["React","ListItem","T","uuid","todosOperations","todosSelectors","Link","Route","compose","withState","withHandlers","connect","App","isLoading","setInputState","inputState","handleOnClick","evt","target","value","propTypes","bool","string","func","mapDispatchToProps","addTodo","mapStateToProps","state","getLoadingStatus","props","newTodo","text","id","completed","console"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ListItem from './components/ListItem';\nimport T from 'prop-types';\nimport uuid from 'uuid/v4'\nimport { todosOperations, todosSelectors } from './modules/todos';\nimport { Link, Route } from 'react-router-dom';\nimport { compose, withState, withHandlers } from 'recompose';\nimport { connect } from 'react-redux';\n\nfunction App({\n  isLoading,\n  setInputState,\n  inputState,\n  handleOnClick,\n}) {\n  return (\n    <div className=\"App\">\n      <input onChange={(evt)=>setInputState(evt.target.value)} value={inputState} />\n      <button onClick={handleOnClick}>{isLoading? 'loading' : 'Add'}</button>\n      <div>\n        <Link to='/'>Всі</Link>\n        <Link to='/new'>Нові</Link>\n        <Link to='/completed'>Виконані</Link>\n      </div>\n      <Route exact  path='/' component={ListItem} />\n      <Route path='/new' component={ListItem} />\n      <Route path='/completed' component={ListItem} />      \n    </div>\n  );\n}\n\nApp.propTypes = {\n  isLoading: T.bool,\n  inputState: T.string,\n  handleOnClick: T.func,\n  setInputState: T.func,\n}\n\nconst mapDispatchToProps = {\n  addTodo: todosOperations.addTodo,\n}\nconst mapStateToProps = (state)=> ({\n  isLoading: todosSelectors.getLoadingStatus(state),\n})\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withState('inputState', 'setInputState', ''),\n  withHandlers({\n    handleOnClick: (props)=>()=>{\n      const newTodo = {\n        text:props.inputState,\n        id: uuid(),\n        completed: false,\n      };\n      console\n      props.addTodo(newTodo);\n      props.setInputState('');\n    },\n  })\n)(App);"]},"metadata":{},"sourceType":"module"}