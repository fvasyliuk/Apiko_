{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Apiko\\\\home_task_8\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Apiko\\\\home_task_8\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport * as actions from './todosActions';\nimport Api from '../../api/Api';\nexport function addTodo(todo) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _addTodoThunk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                dispatch(actions.addTodo.start());\n                _context.next = 4;\n                return Api.add(todo);\n\n              case 4:\n                res = _context.sent;\n                dispatch(actions.addTodo.success(todo));\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                dispatch(actions.addTodo.error(_context.t0));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }));\n\n      function addTodoThunk(_x, _x2) {\n        return _addTodoThunk.apply(this, arguments);\n      }\n\n      return addTodoThunk;\n    }()\n  );\n}\nexport function deleteTodo(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _deleteTodoThunk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                try {\n                  dispatch(actions.deleteTodo.start(id));\n                  res = Api.remove(id);\n                  dispatch(actions.deleteTodo.success(id));\n                } catch (err) {\n                  dispatch(actions.deleteTodo.error(err));\n                }\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function deleteTodoThunk(_x3) {\n        return _deleteTodoThunk.apply(this, arguments);\n      }\n\n      return deleteTodoThunk;\n    }()\n  );\n}\nexport function clickOnTodo(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _clickOnTodoThunk = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                try {\n                  dispatch(actions.clickOnTodo.start(id)); //await setTimeout(()=>{dispatch(actions.clickOnTodo.success(id))},200);            \n                } catch (err) {\n                  dispatch(actions.clickOnTodo.error(err));\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function clickOnTodoThunk(_x4) {\n        return _clickOnTodoThunk.apply(this, arguments);\n      }\n\n      return clickOnTodoThunk;\n    }()\n  );\n}\nexport { actions };","map":{"version":3,"sources":["C:\\Apiko\\home_task_8\\src\\modules\\todos\\todosOperations.js"],"names":["actions","Api","addTodo","todo","dispatch","getState","start","add","res","success","error","addTodoThunk","deleteTodo","id","remove","err","deleteTodoThunk","clickOnTodo","clickOnTodoThunk"],"mappings":";;AAAA,OAAO,KAAKA,OAAZ,MAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AAGA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC1B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAA4BC,QAA5B,EAAsCC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECD,gBAAAA,QAAQ,CAACJ,OAAO,CAACE,OAAR,CAAgBI,KAAhB,EAAD,CAAR;AAFD;AAAA,uBAImBL,GAAG,CAACM,GAAJ,CAAQJ,IAAR,CAJnB;;AAAA;AAIOK,gBAAAA,GAJP;AAMCJ,gBAAAA,QAAQ,CAACJ,OAAO,CAACE,OAAR,CAAgBO,OAAhB,CAAwBN,IAAxB,CAAD,CAAR;AAND;AAAA;;AAAA;AAAA;AAAA;AAQCC,gBAAAA,QAAQ,CAACJ,OAAO,CAACE,OAAR,CAAgBQ,KAAhB,aAAD,CAAR;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA,eAAsBC,YAAtB;AAAA;AAAA;;AAAA,aAAsBA,YAAtB;AAAA;AAAA;AAWH;AAED,OAAO,SAASC,UAAT,CAAoBC,EAApB,EAAwB;AAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAA+BT,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,oBAAG;AACCA,kBAAAA,QAAQ,CAACJ,OAAO,CAACY,UAAR,CAAmBN,KAAnB,CAAyBO,EAAzB,CAAD,CAAR;AACML,kBAAAA,GAFP,GAEaP,GAAG,CAACa,MAAJ,CAAWD,EAAX,CAFb;AAGCT,kBAAAA,QAAQ,CAACJ,OAAO,CAACY,UAAR,CAAmBH,OAAnB,CAA2BI,EAA3B,CAAD,CAAR;AACH,iBAJD,CAIE,OAAOE,GAAP,EAAY;AACVX,kBAAAA,QAAQ,CAACJ,OAAO,CAACY,UAAR,CAAmBF,KAAnB,CAAyBK,GAAzB,CAAD,CAAR;AACH;;AAPE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA,eAAsBC,eAAtB;AAAA;AAAA;;AAAA,aAAsBA,eAAtB;AAAA;AAAA;AASH;AAED,OAAO,SAASC,WAAT,CAAqBJ,EAArB,EAAyB;AAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,kBAAgCT,QAAhC;AAAA;AAAA;AAAA;AAAA;AACH,oBAAG;AACCA,kBAAAA,QAAQ,CAACJ,OAAO,CAACiB,WAAR,CAAoBX,KAApB,CAA0BO,EAA1B,CAAD,CAAR,CADD,CAEC;AACH,iBAHD,CAGE,OAAOE,GAAP,EAAY;AACVX,kBAAAA,QAAQ,CAACJ,OAAO,CAACiB,WAAR,CAAoBP,KAApB,CAA0BK,GAA1B,CAAD,CAAR;AACH;;AANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA,eAAsBG,gBAAtB;AAAA;AAAA;;AAAA,aAAsBA,gBAAtB;AAAA;AAAA;AAQH;AAGD,SAASlB,OAAT","sourcesContent":["import * as actions from './todosActions';\r\nimport Api from '../../api/Api';\r\n\r\n\r\nexport function addTodo(todo) {\r\n    return async function addTodoThunk(dispatch, getState) {\r\n        try{\r\n            dispatch(actions.addTodo.start());\r\n\r\n            const res = await Api.add(todo);\r\n\r\n            dispatch(actions.addTodo.success(todo))  \r\n        } catch (err) {\r\n            dispatch(actions.addTodo.error(err))\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteTodo(id) {\r\n    return async function deleteTodoThunk(dispatch) {\r\n        try{\r\n            dispatch(actions.deleteTodo.start(id));\r\n            const res = Api.remove(id);     \r\n            dispatch(actions.deleteTodo.success(id))\r\n        } catch (err) {\r\n            dispatch(actions.deleteTodo.error(err))\r\n        }\r\n    }\r\n}\r\n\r\nexport function clickOnTodo(id) {\r\n    return async function clickOnTodoThunk(dispatch) {\r\n        try{\r\n            dispatch(actions.clickOnTodo.start(id));\r\n            //await setTimeout(()=>{dispatch(actions.clickOnTodo.success(id))},200);            \r\n        } catch (err) {\r\n            dispatch(actions.clickOnTodo.error(err))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport { actions };"]},"metadata":{},"sourceType":"module"}